# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
# todo: mount ../staging on /var/tmp/staging

VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
    #config.vm.box = "matyunin/centos7"
   # config.vm.box = "centos/7"
    # Moved to fedora23 for updated docker support and VB guest installed
    config.vm.box="box-cutter/fedora23"


    # Change oisserver to ois. Used by vagrant provisioner
    config.vm.define "oisserver" do |v|
        v.vm.hostname = "openam.viosales.com"
        v.vm.network :private_network, ip: "172.16.184.140"
    end

    config.vm.provider :virtualbox do |vb|
  		vb.customize ["modifyvm", :id, "--memory", "2048"]
  		# Additional disk to support Docker image storage
  		second_disk = "docker_storage.vdi"
  		# Create the disk if it does not exist
  		unless  File.exist?(second_disk)
        vb.customize ['createhd', '--filename', second_disk, '--format', 'VDI', '--size', "4096"]
      end
      # This adds the disk to the default IDE controller
      # The disk should be available in Linux as /dev/sdb
      vb.customize ['storageattach', :id, '--storagectl', 'IDE Controller', '--port', 0, '--device', 1, '--type', 'hdd',
        '--medium', "docker_storage.vdi"]
    end
   
    config.vm.provision "ansible" do |ansible|
        ansible.playbook = "../ansible/frstack.yml"
        #Use the auto-generated inventory
        #ansible.inventory_path = "hosts"
        ansible.verbose = true
        ansible.sudo = true
        # This should avoid checking for an existing host in your known_hosts file
        ansible.host_key_checking = false
        # ansible groups
        # These all map to the same guest - so the net effect is
        # to install everything on the same guest image.
        ansible.groups = {
            "ois" => ["oisserver"],
            "oisa" => ["oisserver"],
            "haproxy" => ["oisserver"]     
        }
    end
end
