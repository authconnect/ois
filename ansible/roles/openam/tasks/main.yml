---
# This role installs openam in tomcat
# This assumes tomcat has already been installed
# Assumes the software has been downloaded and is available at {{ forgerock_download_dir }}/openam
# Uses the variable {{ tomcat_openam_dir }} to know where to install the war file. 
#  This should be the path to the openam tomcat instance dir

- pip: name=requests
- include: ../../openam-uninstall.yml

# create install dir, openam dir
- file: path="{{ install_root}}" owner="{{ fr_user }}" state="directory"

# Note that the openam config dir has to be writable by the user who runs the web container
# In our case that is tomcat. TODO: Use group permissions here
- file: path={{ install_root}}/openam owner={{fr_user}} state="directory" 

#- name: unpack config tools
#  command: creates="{{ install_root }}/ssoconfigtool" unzip {{ download_dir }}/openam/SSOConfiguratorTools-{{ openam_version }}.zip -d {{ install_root }}/ssoconfigtool
  
#- name: copy config file from template
#  template: src=openam.config dest="{{ install_root }}/ssoconfigtool/openam.config" owner="{{fr_user}}" mode=0644

- name: Deploy war to tomcat
  command: creates="{{ tomcat_openam_dir }}/webapps/openam" cp "{{ staging_dir }}/openam.war" "{{ tomcat_openam_dir}}/webapps/openam.war"

- name: Ensure openam tomcat instance is running
  service: name="openam.service" state=restarted enabled=yes

- name: Wait for openam war to be fully deployed before running configurator
  wait_for: port="{{openam_server_port}}" delay=10

# Bit of hack. The previous command waits for the port -but AM could still be deploying
# So this waits another 30 seconds to be safe
- wait_for: port={{openam_server_port}} delay=30

- name: Run ssoconfigure
  ssoconfigure: server_url="http://dev1.authconnect.com:8080"
    deployment_uri="/openam"
    base_dir="{{install_root}}/openam"
    directory_server="{{embedded_dj_host}}"
    root_suffix="o=openam"
    directory_admin_port="{{embedded_dj_admin_port}}"
    directory_jmx_port="{{embedded_dj_jmx_port}}"
    directory_port="{{embedded_dj_ldap_port}}"
    ds_dirmgrdn="{{embedded_dj_dirmgr}}"
    data_store="embedded"
    ds_dirmgrpasswd="{{embedded_dj_password}}"
    userstore_type="LDAPv3ForOpenDS"
    userstore_ssl="SIMPLE"
    userstore_host="{{opendj_host}}"
    userstore_port="{{opendj_ldap_port}}"
    userstore_suffix="{{opendj_basedn}}"
    userstore_mgrdn="{{opendj_dirmgr}}"
    userstore_passwd="{{opendj_password}}"
    amldapuserpasswd="{{amldapuser_password}}"
    cookie_domain="{{openam_cookie_domain}}"
    admin_pwd="{{amadmin_password}}"
    acceptlicense="true"
    am_enc_key="AQICY6Za5J5noktyqnhW10JiPVNUdKuiZYwS"
    lb_site_name="sitea"
    lb_primary_url="{{openam_site_url}}"

# This is deprecated for now. We use the ssoconfigure module above
#  - name: Run openam configurator
#  command: creates={{install_root}}/openam/bootstrap java -jar {{ install_root }}/ssoconfigtool/openam-configurator-tool-{{ openam_version }}.jar 
#         --file {{ install_root }}/ssoconfigtool/openam.config --acceptLicense


# Make sure everything is owned by fr user  
- file: recurse=yes state=directory  owner="{{ fr_user }}"  path="{{ install_root}}" mode=0775
